[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Textures/grass/Bitmap2Material_3_Base_Color.png" type="Texture" id=1]
[ext_resource path="res://Textures/grass/Bitmap2Material_3_Normal.png" type="Texture" id=2]
[ext_resource path="res://Textures/Swamp/Bitmap2Material_3_Roughness.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float should_blink;
uniform vec4 blink_color : hint_color;
uniform float blink_speed;

uniform vec4 tint_color : hint_color;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	// blinking code --	
	float clamped_time = (sin ( TIME * blink_speed ) + 1.0) / 2.0;
	vec4 blinking = blink_color * clamped_time * should_blink;
	ALBEDO = albedo.rgb * albedo_tex.rgb + blinking.rgb + tint_color.rgb;
	// --- modificação
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMALMAP = texture(texture_normal,base_uv).rgb;
	NORMALMAP_DEPTH = normal_scale;
}

"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.47
shader_param/metallic = 0.04
shader_param/roughness = 0.699
shader_param/point_size = 128.0
shader_param/metallic_texture_channel = Plane( 0, 0, 0, 1 )
shader_param/roughness_texture_channel = Plane( 0, 0, 0, 1 )
shader_param/normal_scale = 1.759
shader_param/uv1_scale = Vector3( 2, 2, 2 )
shader_param/uv1_offset = null
shader_param/uv2_scale = null
shader_param/uv2_offset = null
shader_param/should_blink = 0.0
shader_param/blink_color = Color( 1, 1, 1, 1 )
shader_param/blink_speed = 10.0
shader_param/tint_color = Color( 0, 0, 0, 1 )
shader_param/texture_albedo = ExtResource( 1 )
shader_param/texture_roughness = ExtResource( 3 )
shader_param/texture_normal = ExtResource( 2 )
